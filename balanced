
class Stack{

	int data_[STACK_SIZE];
	int top_;
public:
	Stack(){
		top_=0;
	}
	
	bool empty(){
		return top_==0;
	}
	bool full(){
		return top_==STACK_SIZE;
	}
	void push(int val){
		if(full()){
			cout<<"Full"<<endl;
			return;
		}
		data_[top_++]=val;
	}
	void pop(){
		if(empty()){
			cout<<"Empty"<<endl;
			
		}
		 data_[--top_];
	}
};

int main(){
	Stack st;
	int c[STACK_SIZE];
	int i=0, f=0;
	for(i=0;i<STACK_SIZE;i++){
		cin>>c[i];
	}
	for(i=0; i<STACK_SIZE; i++){
		if(f==-1){
			cout<<"UNBALANCED"<<endl;
			break;
		}
		if(c[i]==1){
			st.push(c[i]);
			//cout<<"done"<<endl;
			f++;
			
		}
		else if(c[i]==2){
			 st.pop();
			//cout<<"oops"<<endl;
			f--;
		}
	}
	if(f==0){
		cout<<"BALANCED"<<endl;
	}
	else cout<<"UNBALANCED"<<endl;
	return 0;
}
